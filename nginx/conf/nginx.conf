user root;
worker_processes 1;
load_module "/usr/lib/nginx/modules/ngx_http_fancyindex_module.so";

error_log /usr/share/nginx/logs/error.log;

pid /usr/share/nginx/logs/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /usr/share/nginx/logs/access.log main;

    sendfile on;
    # tcp_nopush on; # Automatically enabled with sendfile enabled.

    # keepalive_timeout 0;
    keepalive_timeout 65;

    # gzip on; # We will leave this off because we do not want to compress the test files.

    # HTTP server
    server {
        listen 80;
        listen 443 ssl;
        server_name flake.legato.io flake.local;

        access_log /usr/share/nginx/logs/http.access.log main;
        root /usr/share/nginx/public;

        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/flake.legato.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/flake.legato.io/privkey.pem;
        ssl_certificate /etc/letsencrypt/live/ecdsa_flake/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ecdsa_flake/privkey.pem;

        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;

        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Index settings
        autoindex off;
        fancyindex on;
        fancyindex_header /resources/header.html;
        fancyindex_exact_size off;
        fancyindex_default_sort size;
        fancyindex_directories_first on;
        fancyindex_localtime on;
        fancyindex_show_path off;
        fancyindex_ignore README;

        location / {
            root /usr/share/nginx/public/html;
            index index.html index.htm;
        }
        # serve static files
        location ~ ^/(files|api)/? {
            root /usr/share/nginx/public;
        }
        location ~ ^/(text|binary|image|video|audio)/? {
            root /usr/share/nginx/public/files;
        }
        location /logs {
            root /usr/share/nginx/;
            fancyindex_default_sort name;
            types {
                text/plain log;
            }
        }
        location /dynamic {
            proxy_pass  http://flake.legato.io:6300/;
        }

        # redirect server error pages to the static page /50x.html
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root public/html;
        }
    }

    # httpbin
    server {
        server_name httpbin.legato.io httpbin.local ~^(\d+)(\.)(\d+)(\.)(\d+)(\.)(\d+);
        listen 80;
        listen 443 ssl;

        access_log /usr/share/nginx/logs/http.access.log main;
        root /usr/share/nginx/public;

        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/flake.legato.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/flake.legato.io/privkey.pem;
        ssl_certificate /etc/letsencrypt/live/ecdsa_flake/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ecdsa_flake/privkey.pem;

        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;

        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location / {
           proxy_pass http://httpbin:80;
        }
    }

    # http for client authentication
    server {
        server_name  client-auth.httpbin.legato.io;
        listen 80;
        listen 443 ssl;

        access_log /usr/share/nginx/logs/http.access.log main;
        root /usr/share/nginx/public;

        # SSL configuration
        ssl on;
        ssl_certificate /etc/letsencrypt/live/flake.legato.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/flake.legato.io/privkey.pem;
        ssl_certificate /etc/letsencrypt/live/ecdsa_flake/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ecdsa_flake/privkey.pem;
        ssl_client_certificate /etc/letsencrypt/live/mqtt_flake/ca.crt;
	    ssl_verify_client      on;

        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;

        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://httpbin:80;
        }
    }
}
